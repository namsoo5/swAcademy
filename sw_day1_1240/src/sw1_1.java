
import java.util.ArrayList;
import java.util.Scanner;

public class sw1_1 {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);

        int t = scan.nextInt();
        int count = 1;
        int n, m;

        int start; //암호시작
        ArrayList<Integer> number;
        StringBuilder sb;
        String s ;
        StringBuilder decode;
        int oddsum;
        int evensum;
        char[] carr;
        int index=0;
        while(t>0){
            decode = new StringBuilder();
            n=scan.nextInt();
            m=scan.nextInt();
            number = new ArrayList<Integer>();
            oddsum=0;
            evensum=0;
            carr = new char[56];
            sb = new StringBuilder();



            for(int i=0; i<n; i++) {

                s = scan.nextLine();
                sb.append(s);

            }

            for(int i=0; i<n; i++){
                start = sb.lastIndexOf("1");
                if(start == -1)  //암호문없음
                    continue;
                else
                {
                    sb.getChars(start-55 , start+1, carr, 0);  //암호문넣음
                }
            }

            for(int i=0; i<carr.length; i++){
                decode.append(carr[i]);
                index++;
                if(index==7){
                    index=0;
                    switch (decode.toString()){
                        case "0001101":
                            number.add(0);
                            break;
                        case "0011001":
                            number.add(1);
                            break;
                        case "0010011":
                            number.add(2);
                            break;
                        case "0111101":
                            number.add(3);
                            break;
                        case "0100011":
                            number.add(4);
                            break;
                        case "0110001":
                            number.add(5);
                            break;
                        case "0101111":
                            number.add(6);
                            break;
                        case "0111011":
                            number.add(7);
                            break;
                        case "0110111":
                            number.add(8);
                            break;
                        case "0001011":
                            number.add(9);
                            break;
                    }
                    decode.delete(0,8);
                }
            }

            for(int i=0; i<number.size(); i++){
                if(i%2==0) //짝수
                {
                    evensum+=number.get(i);
                }
                else{
                    oddsum+=number.get(i);
                }
            }

            if((evensum*3+oddsum) % 10 ==0)//10배수
            {
                System.out.println("#"+count+" "+(evensum+oddsum));
            }else {
                System.out.println("#" + count + " 0");
            }

            count++;
            t--;
        }

    }
}
/*
2
 16 80
 00000000000000000000000000000000000000000000000000000000000000000000000000000000
 00000000000000000000000000000000000000000000000000000000000000000000000000000000
 00000000000000000000000000000000000000000000000000000000000000000000000000000000
 00000000000000000000000000000000000000000000000000000000000000000000000000000000
 00000000000000000000000000000000000000000000000000000000000000000000000000000000
 00000000000000000000000000000000000000000000000000000000000000000000000000000000
 00000000000000011101101100010111011011000101100010001101001001101110110000000000
 00000000000000011101101100010111011011000101100010001101001001101110110000000000
 00000000000000011101101100010111011011000101100010001101001001101110110000000000
 00000000000000011101101100010111011011000101100010001101001001101110110000000000
 00000000000000011101101100010111011011000101100010001101001001101110110000000000
 00000000000000011101101100010111011011000101100010001101001001101110110000000000
 00000000000000011101101100010111011011000101100010001101001001101110110000000000
 00000000000000000000000000000000000000000000000000000000000000000000000000000000
 00000000000000000000000000000000000000000000000000000000000000000000000000000000
 00000000000000000000000000000000000000000000000000000000000000000000000000000000
 11 70
 00000000000000000000000000000000000000000000000000000000000000000000000
 00000000000000000000000000000000000000000000000000000000000000000000000
 00000001100101000110100011010111101101110010011001001101110110000000000
 00000001100101000110100011010111101101110010011001001101110110000000000
 00000001100101000110100011010111101101110010011001001101110110000000000
 00000001100101000110100011010111101101110010011001001101110110000000000
 00000001100101000110100011010111101101110010011001001101110110000000000
 00000001100101000110100011010111101101110010011001001101110110000000000
 00000000000000000000000000000000000000000000000000000000000000000000000
 00000000000000000000000000000000000000000000000000000000000000000000000
 00000000000000000000000000000000000000000000000000000000000000000000000
 */